---
metadata:
  description:
  credits:
  - https://www.theiphonewiki.com/wiki/IMG4_File_Format
  - rickmark
  collections:
  - img4_tags
  - manifest_properties
  - objects
  - lpol_properties
  - core
  - types
  - cryptex_properties
core:
  IM4M:
    description: Image4 Manifest Object (No payload, only manifest).  IM4M, verion,
  IM4P:
    description: Image4 Payload (No Manifest, Only Data).  Contains IM4P, type, description,
      data and optional keybags
  IM4R:
    description: Image4 Recovery
  IMG4:
    description: Wrapper for all Image4 Objects (Payload, Manifest, Recovery)
  MANB:
    description: Manifest Body
  MANP:
    description: Manifest Properties
  OBJP:
    description: Object Properties - Values that may be assigned per "object" (firmwares)
      that contain a `DGST`
    type: sequence
types:
  digest-object:
    description: Digest Objects are Firmware or Other Hash-able binary streams. They
      will exist in NOR, Disk, or be received over USB.  These objects will contain
      a `DGST` value that is the cryptographic hash of the contents. They can contain
      additional properties per object, some of which are standard and others that
      are object specific.
    common_properties:
      DGST: The cryptographic digest of the object
      EKEY:
        description: Effective Key Access - The effective access to teh SEP, used
          to protect data during demotion.  Effective chip promoted
        nullable: false
        type: boolean
      ESEC:
        description: Effective Security Mode - The security mode after evaluating
          the chip and any demotion request
        alias:
        - effective-security-mode-ap
      EPRO:
        description: Effective Production Mode - The production mode after evaluating
          the chip production and demotion request.  Effective chip promotion / demotion
          state (if CPFM 03 this must be 0 to set ESEC)
        alias:
        - effective-production-status-ap
        nullable: false
        type: boolean
    subtypes:
      local-boot-object:
      trust-measurement:
        description: A trust measurement is requested from the processor to ensure
          that the boot flow has not changed since a prior time that measurement was
          taken. To date the trust measurement is commonly found on SEP firmware images.
      ssv-root-hash:
        description: Root Hash values are used to validate the Signature of an APFS
          Signed volume or snapshot.  They will be paired to a corresponding disk
          image. Some also are paired with `ssv-merkle-tree` which includes the metadata
          for the volume.
      trust-cache:
      img4-disk-image:
        description: Disk images are often signed IMG4 payloads used for USB boot
          or as the arm64BaseSystem.dmg.  IMG4 is used for smaller disk images that
          can be entirely validated "single shot" unlike larger disks which use SSV
          and validate on read.
      firmware:
        object_properties:
          oppd:
            description: Unknown, used by `stg1`/`sepi` - sha384 hash sized
          tbms:
            description: Trusted Boot Measurement (Signature?)
            notes: Likely encrypted by the SEP and opaque to the AP
  trust:
    objects:
      rssl:
        description: The valid CA used for secure communications with the FDR server
          to obtain the FDR objects.  This differs from the `trst` object as `rssl`
          is in transit and `trst` is at rest.
      trpk:
        description: Trust public keys
      trst:
        description: The certificate used for the `seal` object
      rvok:
        description: Trust object revocation list
      inst:
        description: The key or file to install
      secb:
        description: Sets a security value such as `trst` or the FDR signing trust
          object. "security blob?".  Known to include `trst` (yes a `trst` partition
          with a `secb` object with a `trst` object), `rssl` (Factory SSL root CA),
          `rvok` (Revocation list) and `trpk` (trusted public keys?)
lpol_properties:
  auxi:
    title: Auxiliary Image4 Manifest Hash (`auxi`)
    description: After the system verifies that the UAKL hash matches what’s found
      in the `auxp` field of the LocalPolicy, it requests that the AuxKC be signed
      by the Secure Enclave processor application that’s responsible for LocalPolicy
      signing. Next, an SHA384 hash of the AuxKC Image4 manifest signature is placed
      into the LocalPolicy to avoid the potential for mixing and matching previously
      signed AuxKCs to an operating system at boot time. If iBoot finds the auxi field
      in the LocalPolicy, it attempts to load the AuxKC from storage and validate
      its signature. It also verifies that the hash of the Image4 manifest attached
      to the AuxKC matches the value found in the auxi field. If the AuxKC fails to
      load for any reason, the system continues to boot without this boot object and
      (so) without any third-party kexts loaded. The auxp field is a prerequisite
      for setting the auxi field in the LocalPolicy. Users change the auxi value implicitly
      when they change the UAKL by approving a kext from the Security & Privacy pane
      in System Preferences.
    type: digest-object
    subtype: manifest
    access:
      write:
      - macOS
  auxp:
    title: Auxiliary Policy Hash (auxp)
    description: The `auxp` is an SHA384 hash of the user-authorized kext list (UAKL)
      policy. This is used at AuxKC generation time to help ensure that only user-authorized
      kexts are included in the AuxKC. `smb2` is a prerequisite for setting this field.
      Users change the `auxp` value implicitly when they change the UAKL by approving
      a kext from the Security & Privacy pane in System Preferences.
    type: binary
    subtype: sha2-384
    access:
      write:
      - macOS
  auxr:
    title: Auxiliary Kernel Collection (AuxKC) Receipt Hash (auxr)
    description: The `auxr` is an SHA384 hash of the AuxKC receipt, which indicates
      the exact set of kexts that were included into the AuxKC. The AuxKC receipt
      can be a subset of the UAKL, because kexts can be excluded from the AuxKC even
      if they’re user authorized if they’re known to be used for attacks. In addition,
      some kexts that can be used to break the user-kernel boundary may lead to decreased
      functionality, such as an inability to use Apple Pay or play 4K and HDR content.
      Users who want these capabilities opt in to a more restrictive AuxKC inclusion.
      The auxp field is a prerequisite for setting the auxr field in the LocalPolicy.
      Users change the auxr value implicitly when they build a new AuxKC from the
      Security & Privacy pane in System Preferences.
    type: digest-object
    subtype: sha2-384
    access:
      write:
      - macOS
  coih:
    title: CustomOS Image4 Manifest Hash (coih)
    description: The `coih` is an SHA384 hash of CustomOS Image4 manifest. The payload
      for that manifest is used by iBoot (instead of the XNU kernel) to transfer control.
      Users change the `coih` value implicitly when they use the `kmutil` configure-boot
      command-line tool in 1TR.
    type: digest-object
    subtype: IM4M
    access:
      write:
      - 1TR
  gaid:
    description: Gaia Authentication ID (Apple Internal)
  hrlp:
    title: Has Secure Enclave Signed recoveryOS Local Policy (hrlp)
    description: The `hrlp` indicates whether or not the `prot` value is the measurement
      of a Secure Enclave–signed recoveryOS LocalPolicy. If not, then the recoveryOS
      LocalPolicy is signed by the Apple online signing server, which signs things
      such as macOS Image4 files.
    type: boolean
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  kuid:
    title: Key encryption key (KEK) Group UUID (kuid)
    description: The kuid indicates the volume that was booted. The key encryption
      key has typically been used for Data Protection. For each LocalPolicy, it’s
      used to protect the LocalPolicy signing key. The kuid is set by the user implicitly
      when creating a new operating system install.
    type: binary
    subtype: sha2-384
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  lobo:
    description: Local Boot Object.  Indicates that the object is to be used as the
      target of a local boot only and not provided by the server for remote / DFU
      boots.
  lpnh:
    title: LocalPolicy Nonce Hash (lpnh)
    description: The lpnh is used for anti-replay of the LocalPolicy. This is an SHA384
      hash of the LocalPolicy Nonce (LPN), which is stored in the Secure Storage Component
      and accessible using the Secure Enclave Boot ROM or Secure Enclave. The raw
      nonce is never visible to the Application Processor, only to the sepOS. An attacker
      wanting to convince LLB that a previous LocalPolicy they had captured was valid
      would need to place a value into the Secure Storage Component, which hashes
      to the same lpnh value found in the LocalPolicy they want to replay. Normally
      there is a single LPN valid on the system—except during software updates, when
      two are simultaneously valid—to allow for the possibility of falling back to
      booting the old software in the event of an update error. When any LocalPolicy
      for any operating system is changed, all policies are re-signed with the new
      lpnh value corresponding to the new LPN found in the Secure Storage Component.
      This change happens when the user changes security settings or creates new operating
      systems with a new LocalPolicy for each.
    type: binary
    subtype: sha2-384
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  nish:
    title: Next Stage Image4 Manifest Hash (nsih)
    description: The nsih field represents an SHA384 hash of the Image4 manifest data
      structure that describes the booted macOS. The macOS Image4 manifest contains
      measurements for all the boot objects—such as iBoot, the static trust cache,
      device tree, Boot Kernel Collection, and signed system volume (SSV) volume root
      hash. When LLB is directed to boot a given macOS, it’s designed to ensure that
      the hash of the macOS Image4 manifest attached to iBoot matches what’s captured
      in the nsih field of the LocalPolicy. In this way, the nsih captures the user
      intention of what operating system the user has created a LocalPolicy for. Users
      change the nsih value implicitly when they perform a software update.
    type: binary
    subtype: sha2-384
    context:
      lpol:
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  prot:
    title: Paired recoveryOS Trusted Boot Policy Measurement (prot)
    description: A paired recoveryOS Trusted Boot Policy Measurement (TBPM) is a special
      iterative SHA384 hash calculation over the Image4 manifest of a LocalPolicy,
      excluding nonces, in order to give a consistent measurement over time (because
      nonces like lpnh are frequently updated). The prot field, which is found only
      in each macOS LocalPolicy, provides a pairing to indicate the recoveryOS LocalPolicy
      that corresponds to the macOS LocalPolicy.
    type: digest-object
    subtype: trust-measurement
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  rolp:
    description: recoveryOS local policy
    type: boolean
  ronh:
    title: recoveryOS Nonce Hash (ronh)
    description: The ronh behaves the same way as the lpnh, but is found exclusively
      in the LocalPolicy for system recoveryOS. It’s updated when the system recoveryOS
      is updated, such as on software updates. A separate nonce from the lpnh and
      rpnh is used so that when a device is put into a disabled state by Find My,
      existing operating systems can be disabled (by removing their LPN and RPN from
      the Secure Storage Component), while still leaving the system recoveryOS bootable.
      In this way, the operating systems can be re-enabled when the system owner proves
      their control over the system by putting in their iCloud password used for the
      Find My account. This change happens when a user updates the system recoveryOS
      or creates new operating systems.
    type: binary
    subtype: sha2-384
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  rpnh:
    title: Remote Policy Nonce Hash (rpnh)
    description: The rpnh behaves the same way as the lpnh but is updated only when
      the remote policy is updated, such as when changing the state of Find My enrollment.
      This change happens when the user changes the state of Find My on their Mac.
    type: binary
    subtype: sha2-384
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
  sip0:
    title: System Integrity Protection (SIP) 0 Status - Overall
    description: The sip0 holds the existing System Integrity Protection (SIP) policy
      bits that previously were stored in NVRAM. New SIP policy bits are added here
      (instead of using LocalPolicy fields like the below) if they’re used only in
      macOS and not used by LLB. Users can change this field using csrutil from 1TR
      to disable SIP and downgrade to Permissive Security.
    access:
      write:
      - 1TR
  sip1:
    title: System Integrity Protection (SIP) 1 Status - Signed System Volume
    description: If sip1 is present and true, iBoot will allow failures to verify
      the SSV volume root hash. Users can change this field using csrutil or bputil
      from 1TR.
  sip2:
    title: System Integrity Protection (SIP) 2 Status - Kernel CTRR Status
    description: If sip2 is present and true, iBoot will not lock the Configurable
      Text Read- only Region (CTRR) hardware register that marks kernel memory as
      non-writable. Users can change this field using csrutil or bputil from 1TR.
  sip3:
    title: System Integrity Protection (SIP) 3 Status - Boot Args Filtering
    description: If sip3 is present and true, iBoot will not enforce its built-in
      allow list for the boot-args NVRAM variable, which would otherwise filter the
      options passed to the kernel. Users can change this field using csrutil or bputil
      from 1TR.
  smb0:
    description: Secure Multi-Boot 0 - Security Mode - Full Security, Reduced, Disabled
      - Setting to 1 sets to reduced
  smb1:
    description: Secure Multi-Boot 1 - Setting to 1 allows Permissive
  smb2:
    description: Secure Multi-Boot 2 - 3rd Party Kexts Status
  smb3:
    description: Secure Multi-Boot 3 - User-allowed MDM Control
  smb4:
    description: Secure Multi-Boot 3 - DEP-allowed MDM Control
  smb5:
    description: Unknown - but known to exist in Factory signing
  snuf:
    description: Software Nonce For Update Freshness
  spih:
    description: Cryptex1 Image4 Hash
  vuid:
    title: APFS volume group UUID (vuid)
    description: The vuid indicates the volume group the kernel should use as root.
      This field is primarily informational and isn’t used for security constraints.
      This vuid is set by the user implicitly when creating a new operating system
      install.
    type: binary
    subtype: sha2-384
    access:
    - 1TR
    - recoveryOS
    - macOS
cryptex_properties:
  augs:
    description: Auxiliary System Image Included in APTicket CA extensions, as well
      as factory manifests.  All cryptex manifests, and APTickets other then the root
      APTicket (the one that is used directly from NOR) have this set to 1, indicating
      that it is an an addition or replacement to APTicket, but only if authorized.  It
      also seems to travel with `aubt` and `aupr`
    roots:
    - ExtraContent
    - ManifestKey
  auxh:
    description: User Authorized Kext List Hash
    context:
  clas:
    description: Class for Key / Object - Found in FDR objects
    examples:
    roots:
    - ExtraContent
  cnch:
    roots:
    - ExtraContent
  fchp:
    description: Family of the CHIP - Cryptex1,ChipID - Mask
    roots:
    - ExtraContent
  ndom:
    description: Nonce Domain
    roots:
    - ExtraContent
    - ExtraContent
  pave:
    description: Pre-authorization Version (XNU) The version of a pre-authorized Cryptex.
    type: string
    roots:
    - ExtraContent
  snuf:
    description: SoftwareNonceForUpdateFreshness
  styp:
    description: Crytpex Subtype
    type: u32
    alias:
    - cryptex subtype
    roots:
    - ExtraContent
  type:
    description: Cryptex Type
    type: integer
    roots:
    - ExtraContent
  UDID:
    description: universal device identifier
  vnum:
    description: Version Number - Update Maximum
    type: string
    roots:
    - ExtraContent
cryptex_objects:
  caos:
    description:
    type: digest-object
    root:
    - ExtraContent
  casy:
    description: App Cryptex SSV Root Hash
    type: digest-object
    subtype: ssv-root-hash
    roots:
    - ExtraContents
  csos:
    description:
    type: digest-object
    roots:
    - ExtraContent
  cssy:
    description: System Cryptex SSV Root Hash
    type: digest-object
    subtype: ssv-root-hash
    roots:
    - ExtraContent
  trcs:
    description:
    type: digest-object
    roots:
    - ExtraContent
  trca:
    description:
    type: digest-object
    roots:
    - ExtraContent
manifest_properties:
  acdc:
    description: Apple Connect Developer Certificate
  acid:
    description: Apple Connect ID (AppleInternal)
    type: integer
  AMNM:
    description: allow mix-n-match When set to true, img4s can be any valid signed
      version, allowing for unusual AP tickets where some components may be from a
      prior version
    type: boolean
  BMac:
    description: Bluetooth MAC Address
    manifest: true
  BNCH:
    title: Boot Nonce Cryptographic Hash
    description: Based on the values of com.apple.System.boot-nonces, this is either
      the true APNonce (in the case of SFR or the root APTicket where no scope or
      tweak is applied) or a shadowed BNCH in the case of macOS. If it is a root boot
      nonce the value is stored in com.apple.System.boot-nonce, for scoped or shadowed
      BNCH values this is stored in `nonce-seeds` (A list of random values per domain)
    metadata:
      domains:
        IMG4_NONCE_DOMAIN_INDEX_TEST:
          value: 0
        IMG4_NONCE_DOMAIN_INDEX_TRUST_CACHE:
          value: 1
        IMG4_NONCE_DOMAIN_INDEX_PDI:
          value: 2
          description: Personalized Disk Image
        IMG4_NONCE_DOMAIN_INDEX_CRYPTEX:
          value: 3
          description: Cryptex / Rapid Security Response Domain
        IMG4_NONCE_DOMAIN_INDEX_DDI:
          value: 4
          description: Developer Disk Image
        IMG4_NONCE_DOMAIN_INDEX_EPHEMERAL_CRYPTEX:
          value: 5
        IMG4_NONCE_DOMAIN_INDEX_CRYPTEX1_SNUF_STUB:
          value: 6
          description: Staged Next Update Firmware
        IMG4_NONCE_DOMAIN_INDEX_CRYPTEX1_BOOT:
          value: 7
          description: Boot Cryptex (OS Usually)
        IMG4_NONCE_DOMAIN_INDEX_CRYPTEX1_ASSET:
          value: 8
          description: Asset Cryptex (App Usually)
    type: nonce
    subtype:
  BORD:
    description: |-
      The board the chip is attached to.  With iPhones/iPads this is the variation between
      device sizes (occasionally also used for low cost devices like the SE/XR).  This is
      usually expressed as a hex encoded uint8_t.  Some types of board seem to encode a
      bitfield for non MP (mainline production) boards such as EVT/DVT

      With the T2 this value is unique to all MacBooks with the T2.
    type: integer
    alias:
    - board-id
  CEPO:
    description: |-
      Chip Epoch.  This is a unit of roll-forward time (monotonic) that
      allows for any security issues in the prior epoch to be fixed by a anti-rollback scheme.
    nullable: true
    type: boolean
    alias:
    - chip-epoch
  CHIP:
    description: Unique identifier for a single Apple designed application processor
      sharing the same GID key
    type: integer
    width: 2
  CHMH:
    title: Chained Manifest Hash
    description: Appears in manifest / APTickets where the ticket is chained from
      another via `nish` or `nsph`.
  CPRO:
    description: Certificate Promotion Mode
    alias:
    - certificate-production-status
    nullable: true
    type: boolean
  CSEC:
    description: Certificate Security Mode
    type: boolean
    nullable: true
    alias:
    - certificate-security-mode
  ECID:
    description: Exclusive chip identifier.  This is burned into an eFuse at time
      of manufacture and unique across all devices sharing the same CHIP
    width: 8
  esdm:
    description: Extended Security Domain fuses
    type: integer
    alias:
    - esdm-fuses
  euou:
    description: engineering use-only unit
  faic:
    description:
    type: integer
    default: 0
  iuob:
    description: Internal Use Only Build
  iuos:
    description: Internal Use Only Software
  iuou:
    description: Internal Use Only Unit
  LNCH:
    description: Local Policy Next Cryptographic Hash
  love:
    title: Long Operating System Version (love)
    description: The love indicates the OS version that the LocalPolicy is created
      for. The version is obtained from the next state manifest during LocalPolicy
      creation and is used to enforce recoveryOS pairing restrictions.
    type: string
    example: 21.3.66.0.0,0
    access:
      write:
      - 1TR
      - recoveryOS
      - macOS
    roots:
    - ManifestKey-DataCenter
  lpol:
    description: Local Policy
  mmap:
    description: Memory Map
  Mod#:
  nsih:
    description: Next Stage Image4 Hash
  nsph:
    description: Next Stage pre-boot splat manifest hash
  prtp:
    description: Product Type String
    type: string
    example: iPhone16,2
    roots:
    - ManifestKey-DataCenter
  psmh:
    description: previous stage manifest hash
  rcfg:
    description: Appears in certificates issues by factory such as `T6031-SDOM1-TssLive-ManifestKey-RevA-Factory`.
      Potentially indicates that the policy is for a recovery boot only.
    type: boolean
  Regn:
    description: Region Code
    example: LL/A
    type: string
    manifest: true
  rfcg:
    type: boolean
  RNCH:
    description: Remote Nonce Cryptographic Hash
  RSCH:
    description: Research mode
  rsch:
    description: research mode
  sdkp:
    description: SDK Platform
    type: string
    roots:
    - ManifestKey-DataCenter
    values:
    - iphoneos
    - macos
  SDOM:
    description: |-
      Security domain, or which set of certificates govern device security.

      Known values:
        0x01 - Main Production certificates
    width: 2
    alias:
    - security-domain
  SECM:
    description: Security Mode
  sei3:
    description: Secure Enclave ID for EL3 Appears to have a value identical to `seid`.
  seid:
    description: Secure Enclave ID - Root Domain
  sika:
    description: System Identity Key Access
  SNON:
    description: SEP Nonce
  snon:
    description: SEP Nonce
  SrNm:
    description: Unit Serial Number
    manifest: true
  sski:
    description: SHA2 os some kind - sep/system subject key identifier?
    type: binary
  stng:
    description: Cryptex1 Generation / Cryptex type?
  svrn:
    description: Server nonce
  tatp:
    description: Target Type (board name)
    roots:
    - ManifestKey-DataCenter
  TMac:
    description: Thunderbolt MAC Address
    manifest: true
  UID_MODE:
    title: UID as GID Key Mode
    type: boolean
    request: true
    description: Used to create keybags for the UID instead of the GID key, such as
      the use of `sepi` or booted SEP image firmware (as SEP hibernation data is crypted
      with the devices UID rather then the GID).
    see:
    - uidm
  uidm:
    description: UID Mode (Enabled)
    type: boolean
    roots:
    - ManifestKey-DataCenter
  WMac:
    description: Wireless MAC Address
  WSKU:
    description: Wireless SKU
objects:
  acfw:
    description:
  almo:
    description: Some internal iBootable image.  Unknown purpose
  anef:
    description: Apple Neural Engine Firmware
    type: digest-object
    roots:
    - ManifestKey-DataCenter
  ansf:
    description: Apple NAND Storage Firmware
  aopf:
    description: Always on processor firmware
    type: digest-object
    roots:
    - ManifestKey-DataCenter
  aubt:
    description: Audio Boot Chime
  aupr:
    description: Audio Power Attach Chime
  auxk:
    description: Auxiliary Kernel Cache
  avef:
    description: AV Encryption (DRM) Firmware
    type: digest-object
    roots:
    - ManifestKey-DataCenter
  bat0:
    description: battery image 0
  bat1:
    description: battery image 1
  batF:
    description: Battery Full Image
    type: digest-object
    subtype: graphic
    firmware: true
  bstc:
    title: Base System Trust Cache
    description: The Base System Trust Cache is the static trust cache (a file containing
      a list of CDHashes that is to be trusted and executed at platform trust.) that
      corresponds to the Base System (typically arm64BaseSystem.dmg).
    type: digest-object
    subtype: trust-cache
  bsys:
    title: Base System Root Hash
    type: digest-object
    subtype: ssv-root-hash
  chg0:
    description: Charging Image 0
    type: digest-object
    subtype: graphic
  chg1:
    description: Charging Image 1
    type: digest-object
    subtype: graphic
  ciof:
    description: TypeC IO Firmware
  csys:
    description: Install / Restore SSV Root Hash
    type: digest-object
    subtype: ssv-root-hash
  dcp2:
  dcpf:
  dtre:
    description: device tree
    type: digest-object
    subtype: device-tree
  dtrs:
    description: device tree for recovery
    type: digest-object
    subtype: device-tree
    recovery: true
  dven:
    description: Display Vendor Data
  esca:
    description: Effective Software CA
  fsca:
    description: Factory Software CA
  ftab:
    description: Factory Trust - Auto Boot FTAB images (used for devices such as AirPods,
      etc) are "hacktivated" or pre-APTicket'ed devices as they lack either a restore
      connection, or persistent memory.  Common early usage of this was the Haywire
      dongles used for video conversion on the Mac.  It was simplest for the device
      to lack NAND and simply receive the firmware from a host on power-up.  FTAB
      files are fully ready to run blobs often including RTKit OS based memory images.
    ghost_object: true
  ftap:
    description: Factory Trust/FIPS Test? - Application Processor
    type: hash
    ghost_object: true
  ftsp:
    description: Factory Trust/FIPS Test? - SEP
    type: hash
    ghost_object: true
  gfxf:
    description: Graphics Firmware
  glyP:
  ibd1:
    description: iBoot Data Stage 1
  ibdt:
    description: iBoot Data
  iBEC:
    description: iBoot Epoch Change
  ibot:
    description: iBoot
    subtype: firmware
  iBSS:
    description: iBoot Second Stage
  illb:
    description: Low-Level iBoot
  ipdf:
    description:
  ispf:
    description: Image Signal Processor Firmware
  isys:
    description: Install System SSV Root Hash
  krnl:
    description: Kernel
  logo:
    description: Apple Logo Image
    type: digest-object
    subtype: graphic
    firmware: true
  lpol:
    description: Local Policy Payload
  magg:
    description: Maggie Firmware
  mefi:
    description: MacEFI (T2 firmware for Intel chip)
  msys:
    description: System Volume Canonical Metadata Contains a Merkle Tree of the System
      Volume.  The Merkle-Tree is used to verify Signed System Volume, in a similar
      way to a Git repository, where every file is included in the tree of the folder
      and so on up to the root node. The root node is validated against the corresponding
      `root_hash`.  The inclusion of the merkle tree allows for discovery of where
      the system volume's data is broken, as the root_hash can only tell you if it
      is broken.
  mtfw:
    description: MultiTouch Firmware
  mtpf:
  nefw:
  pdmg:
    description: Personalized Disk Image
  pmpf:
    description: Power Management Processor Firmware
    type: digest-object
    subtype:
  rans:
    description: Restore Apple NAND Storage Firmware
    type: digest-object
    subtype: firmware
    firmware: apple-nand-storage
    restore: true
  rcio:
    description: Restore TypeC IO
    restore: true
  rdcp:
    description: Recovery DCP Firmware
    restore: true
  rdsk:
    description: Restore Disk Image / ramdisk
  rdtr:
    description: Ramdisk Trust
  recm:
    description: Recovery/Refurbish Mode
  rfta:
    description: Recovery/Refurbish Factory Trust AP
  rfts:
    description: Recovery/Refurbish Factory Trust SEP
  rkrn:
    description: Restore Kernel
    restore: true
  rlg1:
  rlg2:
  rlgo:
    description: Restore Logo
    restore: true
  rosi:
    description:
  rsep:
    description: Restore SEP Image, paired with oppd/tbms
    type: string
    encoding: sha2-384
  rtmu:
    description: Restore TMU for AP
    type: digest-object
    firmware: true
    recovery: true
  rtsc:
    description: Recovery
  scef:
    description: SEP Firmware (Boot Firmware without RAM Image)
  sepi:
    description: SEP Image (Booted RAM Image / Hibernation Data)
    type: string
    encoding: sha2-384
    metadata:
      oppd: Original Processed Parameter Data
      tbms: Trusted Boot Measurement Strings
  siof:
    description: Smart IO Firmware
  tmuf:
    description: Trusted MultiUpdater Firmware
  trst:
    description: Trust Object
    type: digest-object
    subtype: trust-object
  tsys:
    description: Test System Volume
  WCHF:
    description: Wireless Charging Firmware
  wchf:
    description: Wireless Charging Framework
  xbtc:
    description: x86 Boot Trust Cache
  xsys:
    description: x86 System Root Hash
img4_tags:
  ache:
    description:
  acib:
    description:
  aciw:
    description:
  ADCL:
    description: Apple Display Calibration
  ader:
    description:
  agfi:
    description:
  anrd:
    description: Apple Notarized Ram Disk
  aofi:
    description: Always on Firmware Image
  apmv:
    description:
  ater:
    description:
  atkh:
    description:
  auac:
    description:
  BLDS:
    description: Boot LocalPolicy Digest String?
  bles:
    description:
  cfel:
    description: Current Firmware Efffective LocalPolicy?
  cker:
    description: Chained Kernel for Recovery
    recovery: true
  ckih:
    description: Chained Kernel Image4 Hash
  CLHS:
    description: Chained LocalPolicy Hash String
  clid:
    description: Class Identifier
  cmsv:
    description:
  dali:
    description:
  data:
    description:
  diag:
    description: Diagnostic (AHT) Image
  disk:
    description:
  DPRO:
    description: Demote from Production Request Value is used by TSS sever to issue
      EPRO values, or effective AP production state.
  DSEC:
    description: Demote from Secure Request Value is used by TSS server to issue ESEC
      values, or effective AP Security Mode should the requester be authorized.  These
      requests are not available to consumers, only to Apple Internal.
  efib:
    description: EFI Bootloader
  eg0n:
    description: Emulated GID0 Nonce
  eg0t:
    description: Emulated GID0 Type
  eg1n:
    description: Emulated GID1 Nonce
  eg1t:
    description: Emulated GID1 Type
  eg3n:
    description: Emulated GID3 Nonce
  eg3t:
    description: Emulated GID3 Type
  esca:
    description: Emulated System Certificate Authority
  fdrs:
    description: Factory Debug Recovery System
  fdrt:
    description: Factory Debug Recovery Trust
  fgpt:
    description: Factory Global Pre-Release Trust
  file:
    description:
  fpgt:
    description:
  ftot:
    description: Factory Trust/FIPS Test? - Other / Original Trust
  ging:
    description:
  glyc:
    description: Gyroscope Calibration
  hash:
    description:
  hclo:
    description: Hypervisor Custom/Current LocalPolicy Object?
  hime:
    description: Hypervisor Related
  hmmr:
    description: Hypervisor Related
  homr:
    description: Hypervisor Related
  hop0:
    description: Hypervisor OS Partition 0 (`dom0`)
  hypr:
    description: Hypervisor Related
  ienv:
    description: Install Environment?
  isor:
    description:
  itst:
    description: Installer Test?
  kdlv:
    description: Kernel Linker Version
  lamo:
    description:
  lckr:
    description: Locker - Used for Effaceable Storage end Obliteration
  lphp:
    description: Local Policy Hash Protection?
  ltrs:
    description: Local TrustStore Recovery System?
  manx:
    description:
  ment:
    description: Memory Map Entitlements
  mmer:
    description: Memory Map Entitlements for Recovery
    recovery: true
  mmsv:
    description: Memory Map System
  mpro:
    description: Memory/Modem? Promotion
  msec:
    description: Memory/Modem? Security
  mspr:
  name:
    description:
  nrde:
    description: Native Ramdisk Environment
  nsrv:
    description:
  omer:
    description: O M E Receipt?
  ooth:
    description: Other OS Translator (Rosetta) Hash?
  osev:
    description: Other System (Rosetta) Environment?
  osrd:
    description: Other System (Rosetta) Ramdisk?
  otes:
    description:
  owns:
    description:
  PAYP:
    description:
  pcrp:
    description: Production certificate root
  pert:
    description: Pre-OS Environment Root Trust
  pfle:
    description: Pre-OS Factory Launch Environment?
  pflp:
    description: Pre-OS Factory Local Policy
  phlt:
    description: Pre-OS/Per-OS Host Local Trust
  pndp:
    description:
  prid:
    description: Encrypted Private Key / Private Key Info / Private Recovery Identity?
  ptrp:
  rbmt:
    description:
  rddg:
    description: Ramdisk for Debugging
  rso0:
    description:
  rso1:
    description:
  rso2:
    description:
  rso3:
    description:
  rtpf:
    description:
  slvn:
    description:
  SPTM:
    description: Secure Page Table Monitor
  ssca:
    description: SEP Subject Certificate Authority?
  ster:
    description:
  stg1:
    description: Stage 1 Bootloader
    type: string
    encoding: sha2-384
  tbmr:
    description: Trusted Boot Measurement (Recovery/Root?)
  tery:
    description:
  test:
    description:
  tics:
    description:
  ucer:
    description: User Cert
  ucon:
    description: User Console Connection
  vice:
    description:
  vkdl:
    description: Virtual Kernel Linker
  ware:
    description: VMWare?
  xugs:
    description: x64 User System Disk
