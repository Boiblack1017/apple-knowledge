---
terms:
  1TR:
  - title: 1 True Recovery / 1 Touch Recovery
    description: Alternate boot mode provided on Apple Silicon based Mac computers
      to enter high integrity and privledged changes such as to boot policy / ASMB
  aarch64:
  aarch64e:
  ace:
  - title: USB-C Port Controller
  aes:
  - title: Advanced Encryption Standard
  aht:
  - title: Apple Hardware Test
  AID:
  - title: Apple ID
  AltDSID:
  AMfD:
  amfm:
  ane:
  - title: Apple Neural Engine
  anps:
  - title: Apple Push Notification Service
    description:
  ans:
  - title: Apple NAND Storage
  aop:
  - title: Always-On Processor
  AP:
  - title: Application Processor
  AppKit:
  aps:
    see:
    - apns
  APTicket:
  arm:
  armv7:
  asmb:
  - title: Apple Secure Multi Boot
  asn:
  asn1:
  AuxKC:
  awdl:
  baa:
  - title: Basic Attestation Authority (BAA)
  baseband:
  BDA:
  bluetooth:
  BootKC:
  BootPolicy:
  bridge:
  bridgeOS:
  bundle:
  cs:
  - title: Code Signing
  csr:
    see:
    - sip
  ctrr:
  dart:
  - title: Device Address Resolution Table
  defaults:
  dep:
  - title: Device Enrollment Program
  der:
  dext:
  dfu:
  - title: Device Firmware Update
  dmg:
  - title: Disk Image
  dsc:
  DsFl:
  DSID:
  dt:
  - title: Device Tree
  DvF:
  dyld:
  dylib:
  ean:
  ecc:
  - title: Elliptic Curve Cryptograph
  - title: Error Checking and Correction
  ecore:
  - title: Efficienty Core
  efi:
  EHCI:
  en:
  - title: Ethernet Adapter (generic)
    description: Often `en` in the form `enX` where X is a number is used to identify
      a network adapter.
  entitlement:
  eOS:
  esim:
  - title: Embedded Subscriber Identificaton Module
    see:
    - sim
  euicc:
    see:
    - esim
  executable:
  FindMy:
  - title: FindMy iPhone / Mac
    description: A set of technologies that both help find the location of a lost
      Apple device, as well as prevent theft from being able to reset the device for
      sale or use.
  FireWire:
  - title: FireWire
  fmm:
    see:
    - FindMy
  fp:
  - title: Frame Pointer
  fpga:
  Framework:
  fw:
    see:
    - FireWire
    - firmware
  gcd:
  - title: Grand Central Dispatch
  hid:
  - title: Human Interface Device
  i2c:
  - title: Inter Integrated Circuit
  iboot:
  IDS:
  - title: Identity Services
  ioreg:
  isp:
  - title: Image Signal Processor
  iv:
  - title: Initialization Vector (Encryption)
  kc:
    see:
    - kernelcache
  kdp:
  - title: Kernel Debug Port / Protocol
    description: KDP is a general way in which XNU allows for the kernel itself to
      be attached to a debugger. Attaching a kernel debugger allows for the complete
      control of a device and subverts all security guarantees, therefore should be
      exercised with care.  Apple makes majority of the KDP for external users available
      through Kernel Debug Kits.  These are components that help with two machine
      debugging, but nearly all kernels shipped by Apple can be debugged if the proper
      `boot-args` are passed on startup.
  kernel:
  kernelcache:
  - title: Kernel Cache
    description: A kernel cache is a combined object that contains the kernel itself
      as well as various kexts (Kernel Extensions).  Older macs would load the kernel
      itself, then load the various kexts from disk. The process of loading the kexts
      and then binding the symbols was a process that slowed the starup of a mac.  Apple
      then started doing the combine of the kernel and the extensions into a BootCache
      that allowed the system to load one large monolithic binary.
  kext:
  key:
  - title: Encryption Key
  keynag:
  ktrr:
  - title: Kernel Text Readonly Region
  launchd:
  LLB:
  LocalPolicy:
  lpddr:
  - title: Low-Power Double Data Rate RAM
    description: LPDDR differs as it uses techniques to minimize the amount of power
      needed to maintain the memory.  Most RAM requires that the RAM controller occasionally
      read each value, and write it again as the data is stored in capacitors that
      leak current over time.  Were the cells not refreshed, every 1 in memory would
      eventually leak enough current that it would become a zero.
    see:
    - ddr
  lr:
  - title: Link Register (ARM)
    description: The LR is populated when a `bx` is called to inform a function of
      the address to return to.
  mach:
  Mach Port:
    see:
    - mach_port
  mach_port:
  macho:
  Md:
  - title: Model
  mdm:
  - title: Mobile Device Management
  MiLo:
  mmu:
  MRI:
  MRtI:
  msr:
  - title: Model/Machine Specific Register
    see:
    - register
  nand:
  - title: Not-AND Based Non-volatile Memory
    see:
    - nvme
  nbAc:
  - title: Nearby Action
    context: nearbyd
  nbAf:
  nbIF:
  - title: Nearby Interface Type
    context: nearbyd
  Nm:
  - title: User Assigned Name
  nmi:
  - title: Non-maskable Interrupt
  nor:
  - title: Not-OR Based Non-volatile Memory
    see:
    - spi
  nub:
  nvram:
  - title: Non-Volatile RAM
  OHCI:
  oic:
  - title: Owner Identity Certificate (OIC)
  oid:
  oik:
  - title: Owner Identity Key (OIK)
  ota:
  - title: Over-the-Air Update - Incremental Update (Somewhat arcane)
    description: In the earliest days of the iPhone, users had to connect the device
      to a computer with iTunes to download and Apply updates to the operating system.  Eventually
      Apple produced a system called OTA (because at the time it was mostly focused
      on download of these updates over cellular - therefore over-the-air as in wireless)
      to allow users to keep a device updated without being tied to a computer. This
      is somewhat of a misnomer now because OTA updates can be delivered over several
      means, some of which include over ethernet for example which, ironically isn't
      over any wireless protocol.  Some types of devices and restore flows make use
      of 'full OTAs' which are a delta update in OTA format, but includes the entire
      set of data to restore devices.  These are typically employed for devices that
      lack the port needed for DFU/iBoot/IPSW based recovery.
  otg:
  - title: USB On-the-go
    description: USB-OTG is a way to describe a device that is typically a peripheral
      acting instead as a USB host.  The technology evolved as phones became not just
      devices you could attach to a computer such as to sync with iTunes, but hosts
      in their own right such as to access a flash drive.
  pa:
  - title: Physical Address
  panic:
  - title: Kernel / Device Panic
    description:
  pc:
  - title: Program Counter (ARM/Intel)
    description: The PC or Program Counter is the address (typically virtual address)
      which the processor is currently executing.  When a subroutine is called, the
      PC is the address passed to LR so that the called function knows where to return
      to.
  pcore:
  - title: Performance Core
  pdu:
  pem:
  pio:
  - title: Programmed IO
  pka:
  pki:
  - title: Public Key Infrastructure
  plist:
  pmgr:
  - title: Power Manager
  pmp:
  - title: Power Management Processor
  pram:
  - title: Parameter RAM
    see:
    - nvram
  quarantine:
  recovery:
  reg:
    see:
    - register
  register:
  - title: Processor Register
  RemotePolicy:
  RemoteXPC:
  restore:
  rsep:
  - title: Restore SEP Firmware Image
  RSSI:
  - title: Receive Signal Stength Indicator
  rtkit:
  - title: RealtimeKit (Realtime OS)
  sart:
  - title: Secure Address Resolution Table
  se:
  - title: Secure Element
  seatbelt:
    see:
    - sandbox
  sep:
  - title: Secure Enclave Processor
  service:
  sik:
  siK:
  - title: System Identity Key
  sim:
  - title: Subscriber Identification Module
  sio:
  - title: SmartIO (iPad keyboard covers)
  SIP:
  - title: System Integrity Protection
    description: System Integrity Protection is a set of technologies employed by
      Apple to ensure that even when a process executes as root (UID0) it cannot modify
      a system in such a way as to disable security features.  The feature is also
      known as `csr` due to it being managed by `csrutil` and stored in Intel macs
      in the nvram variable `csr-status`.
  smc:
  - title: System Management Controller
  smmu:
  soc:
  - title: System-on-a-Chip
  sp:
  - title: Stack Pointer
  spi:
  - title: Serial Peripheral Interconnect
    description: SPI is a physical pin layer used to pass data between chips.  It's
      primary use is in SPI Flash, which is a simple, low level way to read and write
      firmware from flash storage.  This was used to load the BIOS/Firmware for Intel
      macs before the T2. (The T2 uses eSPI or enhanced SPI to expose a "synthetic"
      or fake SPI Flash chip to the Intel chip from the T2).  Often SPI is used by
      Apple devices to load and store non-volatile data prior to bringing up the NAND/NVMe
      chip, this historically was called NOR as it was a distinct component.  NOR
      Flash is usually more expensive compared to NAND which is why the early iPhone
      models made use of a smaller (in the few megabytes range) NOR chip to load iBoot,
      and stored the user's data on a larger NAND flash chip. In newer devices the
      NOR/SPI flash is synthetic and provided by ANS2/3.
  spmi:
  SSID:
  syscall:
  SysCfg:
    see:
    - SysConfig
  SysConfig:
  - title: System Configuration
    description: SysCfg / SysConfig is a portion of non-volatile memory of Apple devices
      that encodes various data that is only to be set by Apple.  The most canonical
      example is this is the location of the serial number.  This is because the device
      serial number cannot be burned in as it is the whole device, not any one component.  SysCfg
      is a series of key/value pairs and is documented in `syscfg.yaml`.
  SystemPolicy:
  tbm:
  - title: Trusted Boot Monitor
  tc:
    see:
    - TrustCache
  tcon:
  - title: Timing Controller (Displays)
    description: The TCON is used to control the refresh of a LED/OLED display, ensuring
      that each frame is shown for the right amount of time, and that new frames are
      updated all at once / not-torn.
  tdm:
  - title: Target Disk Mode
  tfp0:
  trustcache:
  - title:
  tss:
  - title: Tatsu Signing Server
  tz:
  - title: ARM TrustZone
    see:
    - tz0
    - tz1
  tz0:
  tz1:
  uart:
  ucrt:
  - title: User identity Certificate (ucrt)
  uicc:
    see:
    - sim
  uik:
  - title: User Identity Key (UIK)
  UIKit:
  usb-pd:
  - title: USB Power Delivery
  VHCI:
  vm:
  - title: Virtual Memory
  - title: Virtual Machine
  wlan:
  x86:
  x86_64:
  x86_64h:
  xnu:
  XPC:
metadata:
  description:
  credits: []
